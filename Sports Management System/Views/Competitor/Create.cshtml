@model Sports_Management_System.Models.ViewModels.CompetitorsViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create New Competitor</h2>

@using (Html.BeginForm("Create", "Competitor", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_Salutation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competitor_Salutation, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Competitor_Salutation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competitor_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competitor_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_DoB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="Competitor_DoB" name="Competitor_DoB" type="date" value="@Model.Competitor_DoB" class="form-control" />
                @Html.ValidationMessageFor(model => model.Competitor_DoB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competitor_Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competitor_Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Competitor_Description, 5, 40, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competitor_Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competitor_Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competitor_Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Competitor_Gender, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Competitor_Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competitor_ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competitor_ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_Website, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competitor_Website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competitor_Website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competitor_Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    string imagePath = Url.Content("~/CompetitorPhotos/avatar.jpg");

                }
                <img id="competitorPhoto" src="@imagePath" alt="image" style="width:180px;height:150px; margin-bottom:10px" class="img-responsive" />
                <input id="Competitor_Photo" name="Competitor_Photo" type="file" class="form-control" />
                @Html.ValidationMessageFor(model => model.Competitor_Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Games, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Games, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Games, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {

            var dob = $("#Competitor_DoB")[0].defaultValue;
            var currentdate = new Date(dob);
            var formatedEventDate = currentdate.getFullYear() + "-"
                + ('0' + (currentdate.getMonth() + 1)).slice(-2) + "-"
                + ('0' + (currentdate.getDate())).slice(-2) + ""
            $("#Competitor_DoB")[0].defaultValue = formatedEventDate;
        });

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#competitorPhoto').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]); // convert to base64 string
            }
        }

        $("#Competitor_Photo").change(function () {
            readURL(this);
        });
    </script>
}



